{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedkaif/Desktop/myPortfolio-kaif/src/pages/Homepage.js\",\n  _s = $RefreshSig$();\nimport classes from \"./Homepage.module.css\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport Card from '../Assets/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [newTaskDescription, setNewTaskDescription] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const addTask = () => {\n    if (newTask.trim() !== '') {\n      const newTaskObj = {\n        id: new Date().getTime(),\n        title: newTask,\n        description: newTaskDescription,\n        completed: false\n      };\n      setTasks([...tasks, newTaskObj]);\n      setNewTask('');\n      setNewTaskDescription('');\n    }\n  };\n  const deleteTask = taskId => {\n    const updatedTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(updatedTasks);\n  };\n  const toggleComplete = taskId => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n  const filteredTasks = tasks.filter(task => task.title.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search tasks\",\n        value: searchTerm,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task title\",\n        value: newTask,\n        onChange: event => setNewTask(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Task description\",\n        value: newTaskDescription,\n        onChange: event => setNewTaskDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.task,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.completed,\n            onChange: () => toggleComplete(task.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: task.completed ? 'completed' : '',\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTask(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"74QjFPh+ADI36Zi7lUBIR+gygBI=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["classes","React","useState","useEffect","Fragment","Card","jsxDEV","_jsxDEV","TodoList","_s","tasks","setTasks","newTask","setNewTask","newTaskDescription","setNewTaskDescription","searchTerm","setSearchTerm","addTask","trim","newTaskObj","id","Date","getTime","title","description","completed","deleteTask","taskId","updatedTasks","filter","task","toggleComplete","map","handleSearch","event","target","value","filteredTasks","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","className","checked","_c","$RefreshReg$"],"sources":["/Users/mohamedkaif/Desktop/myPortfolio-kaif/src/pages/Homepage.js"],"sourcesContent":["import classes from \"./Homepage.module.css\"\nimport React, { useState, useEffect, Fragment } from 'react';\nimport Card from '../Assets/Card';\n\nconst TodoList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [newTaskDescription, setNewTaskDescription] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const addTask = () => {\n    if (newTask.trim() !== '') {\n      const newTaskObj = {\n        id: new Date().getTime(),\n        title: newTask,\n        description: newTaskDescription,\n        completed: false,\n      };\n      setTasks([...tasks, newTaskObj]);\n      setNewTask('');\n      setNewTaskDescription('');\n    }\n  };\n\n  const deleteTask = (taskId) => {\n    const updatedTasks = tasks.filter((task) => task.id !== taskId);\n    setTasks(updatedTasks);\n  };\n\n  const toggleComplete = (taskId) => {\n    const updatedTasks = tasks.map((task) => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          completed: !task.completed,\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  const handleSearch = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const filteredTasks = tasks.filter((task) =>\n    task.title.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <Fragment>\n    <div>\n      <h1>To-Do List</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search tasks\"\n        value={searchTerm}\n        onChange={handleSearch}\n      />\n      \n      <h2>Add New Task</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Task title\"\n        value={newTask}\n        onChange={(event) => setNewTask(event.target.value)}\n      />\n      <textarea\n        placeholder=\"Task description\"\n        value={newTaskDescription}\n        onChange={(event) => setNewTaskDescription(event.target.value)}\n      ></textarea>\n      <button onClick={addTask}>Add Task</button>\n    </div>\n    <Card className={classes.task}>\n    <ul>\n        {filteredTasks.map((task) => (\n          <li key={task.id}>\n            <input\n              type=\"checkbox\"\n              checked={task.completed}\n              onChange={() => toggleComplete(task.id)}\n            />\n            <span className={task.completed ? 'completed' : ''}>\n              {task.title}\n            </span>\n            <button onClick={() => deleteTask(task.id)}>Delete</button>\n            <button>Edit</button>\n            <p>{task.description}</p>\n          </li>\n        ))}\n      </ul>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default TodoList;"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC5D,OAAOC,IAAI,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMgB,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIN,OAAO,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACzB,MAAMC,UAAU,GAAG;QACjBC,EAAE,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;QACxBC,KAAK,EAAEZ,OAAO;QACda,WAAW,EAAEX,kBAAkB;QAC/BY,SAAS,EAAE;MACb,CAAC;MACDf,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEU,UAAU,CAAC,CAAC;MAChCP,UAAU,CAAC,EAAE,CAAC;MACdE,qBAAqB,CAAC,EAAE,CAAC;IAC3B;EACF,CAAC;EAED,MAAMY,UAAU,GAAIC,MAAM,IAAK;IAC7B,MAAMC,YAAY,GAAGnB,KAAK,CAACoB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACV,EAAE,KAAKO,MAAM,CAAC;IAC/DjB,QAAQ,CAACkB,YAAY,CAAC;EACxB,CAAC;EAED,MAAMG,cAAc,GAAIJ,MAAM,IAAK;IACjC,MAAMC,YAAY,GAAGnB,KAAK,CAACuB,GAAG,CAAEF,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACV,EAAE,KAAKO,MAAM,EAAE;QACtB,OAAO;UACL,GAAGG,IAAI;UACPL,SAAS,EAAE,CAACK,IAAI,CAACL;QACnB,CAAC;MACH;MACA,OAAOK,IAAI;IACb,CAAC,CAAC;IACFpB,QAAQ,CAACkB,YAAY,CAAC;EACxB,CAAC;EAED,MAAMK,YAAY,GAAIC,KAAK,IAAK;IAC9BlB,aAAa,CAACkB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,aAAa,GAAG5B,KAAK,CAACoB,MAAM,CAAEC,IAAI,IACtCA,IAAI,CAACP,KAAK,CAACe,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACxB,UAAU,CAACuB,WAAW,CAAC,CAAC,CAC5D,CAAC;EAED,oBACEhC,OAAA,CAACH,QAAQ;IAAAqC,QAAA,gBACTlC,OAAA;MAAAkC,QAAA,gBACElC,OAAA;QAAAkC,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBtC,OAAA;QACEuC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,cAAc;QAC1BV,KAAK,EAAErB,UAAW;QAClBgC,QAAQ,EAAEd;MAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eAEFtC,OAAA;QAAAkC,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBtC,OAAA;QACEuC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,YAAY;QACxBV,KAAK,EAAEzB,OAAQ;QACfoC,QAAQ,EAAGb,KAAK,IAAKtB,UAAU,CAACsB,KAAK,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACFtC,OAAA;QACEwC,WAAW,EAAC,kBAAkB;QAC9BV,KAAK,EAAEvB,kBAAmB;QAC1BkC,QAAQ,EAAGb,KAAK,IAAKpB,qBAAqB,CAACoB,KAAK,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,eACZtC,OAAA;QAAQ0C,OAAO,EAAE/B,OAAQ;QAAAuB,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACNtC,OAAA,CAACF,IAAI;MAAC6C,SAAS,EAAElD,OAAO,CAAC+B,IAAK;MAAAU,QAAA,eAC9BlC,OAAA;QAAAkC,QAAA,EACKH,aAAa,CAACL,GAAG,CAAEF,IAAI,iBACtBxB,OAAA;UAAAkC,QAAA,gBACElC,OAAA;YACEuC,IAAI,EAAC,UAAU;YACfK,OAAO,EAAEpB,IAAI,CAACL,SAAU;YACxBsB,QAAQ,EAAEA,CAAA,KAAMhB,cAAc,CAACD,IAAI,CAACV,EAAE;UAAE;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC,eACFtC,OAAA;YAAM2C,SAAS,EAAEnB,IAAI,CAACL,SAAS,GAAG,WAAW,GAAG,EAAG;YAAAe,QAAA,EAChDV,IAAI,CAACP;UAAK;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eACPtC,OAAA;YAAQ0C,OAAO,EAAEA,CAAA,KAAMtB,UAAU,CAACI,IAAI,CAACV,EAAE,CAAE;YAAAoB,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC3DtC,OAAA;YAAAkC,QAAA,EAAQ;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACrBtC,OAAA;YAAAkC,QAAA,EAAIV,IAAI,CAACN;UAAW;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAXlBd,IAAI,CAACV,EAAE;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEf,CAAC;AAACpC,EAAA,CA5FID,QAAQ;AAAA4C,EAAA,GAAR5C,QAAQ;AA8Fd,eAAeA,QAAQ;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}