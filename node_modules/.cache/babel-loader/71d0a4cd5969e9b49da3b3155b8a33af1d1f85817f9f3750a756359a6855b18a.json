{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedkaif/Desktop/myPortfolio-kaif/src/pages/Homepage.js\",\n  _s = $RefreshSig$();\nimport classes from \"./Homepage.module.css\";\nimport React, { useState, Fragment, useEffect } from 'react';\nimport Card from '../Assets/Card';\nimport Button from \"../Assets/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [newTaskDescription, setNewTaskDescription] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    // Load tasks from local storage on initial render\n    const storedTasks = localStorage.getItem('tasks');\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  useEffect(() => {\n    // Update local storage whenever tasks change\n  }, [tasks]);\n  const addTask = () => {\n    if (newTask.trim() !== '') {\n      const newTaskObj = {\n        id: new Date().getTime(),\n        title: newTask,\n        description: newTaskDescription\n      };\n      setTasks([...tasks, newTaskObj]);\n      setNewTask('');\n      setNewTaskDescription('');\n    }\n  };\n  const deleteTask = taskId => {\n    const updatedTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(updatedTasks);\n  };\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n  const filteredTasks = tasks.filter(task => task.title.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search tasks\",\n        value: searchTerm,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task title\",\n        value: newTask,\n        onChange: event => setNewTask(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Task description\",\n        value: newTaskDescription,\n        onChange: event => setNewTaskDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.task,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.completed,\n            onClick: () => deleteTask(task.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: task.completed ? 'completed' : '',\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => deleteTask(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"XrBk5uW6vWUzlo2h/sELT2CvH1c=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["classes","React","useState","Fragment","useEffect","Card","Button","jsxDEV","_jsxDEV","TodoList","_s","tasks","setTasks","newTask","setNewTask","newTaskDescription","setNewTaskDescription","searchTerm","setSearchTerm","storedTasks","localStorage","getItem","JSON","parse","setItem","stringify","addTask","trim","newTaskObj","id","Date","getTime","title","description","deleteTask","taskId","updatedTasks","filter","task","handleSearch","event","target","value","filteredTasks","toLowerCase","includes","children","className","input","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","checked","completed","_c","$RefreshReg$"],"sources":["/Users/mohamedkaif/Desktop/myPortfolio-kaif/src/pages/Homepage.js"],"sourcesContent":["import classes from \"./Homepage.module.css\"\nimport React, { useState, Fragment,useEffect } from 'react';\nimport Card from '../Assets/Card';\nimport Button from \"../Assets/Button\"\nconst TodoList = () => {\n  \n\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [newTaskDescription, setNewTaskDescription] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    // Load tasks from local storage on initial render\n    const storedTasks = localStorage.getItem('tasks');\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  useEffect(() => {\n    // Update local storage whenever tasks change\n    \n  }, [tasks]);\n  const addTask = () => {\n    if (newTask.trim() !== '') {\n      const newTaskObj = {\n        id: new Date().getTime(),\n        title: newTask,\n        description: newTaskDescription,\n      };\n      setTasks([...tasks, newTaskObj]);\n      setNewTask('');\n      setNewTaskDescription('');\n    }\n  };\n\n  const deleteTask = (taskId) => {\n    const updatedTasks = tasks.filter((task) => task.id !== taskId);\n    setTasks(updatedTasks);\n  };\n\n  const handleSearch = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const filteredTasks = tasks.filter((task) =>\n    task.title.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <Fragment>\n    <Card className={classes.input}>\n      <h1>To-Do List</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search tasks\"\n        value={searchTerm}\n        onChange={handleSearch}\n      />\n      \n      <h2>Add New Task</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Task title\"\n        value={newTask}\n        onChange={(event) => setNewTask(event.target.value)}\n      />\n      <textarea\n        placeholder=\"Task description\"\n        value={newTaskDescription}\n        onChange={(event) => setNewTaskDescription(event.target.value)}\n      ></textarea>\n      <Button onClick={addTask}>Add Task</Button>\n    </Card>\n    <Card className={classes.task}>\n    <ul>\n        {filteredTasks.map((task) => (\n          <li key={task.id}>\n            <input\n              type=\"checkbox\"\n              checked={task.completed}\n              onClick={() => deleteTask(task.id)}\n            />\n            <span className={task.completed ? 'completed' : ''}>\n              {task.title}\n            </span>\n            <Button onClick={() => deleteTask(task.id)}>Delete</Button>\n            <p>{task.description}</p>\n          </li>\n        ))}\n      </ul>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default TodoList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}