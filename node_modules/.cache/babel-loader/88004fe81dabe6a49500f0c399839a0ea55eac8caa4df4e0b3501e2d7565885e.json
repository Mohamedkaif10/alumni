{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedkaif/Desktop/myPortfolio-kaif/src/pages/Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [newTaskDescription, setNewTaskDescription] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    const storedTasks = localStorage.getItem('tasks');\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  const addTask = () => {\n    if (newTask.trim() !== '') {\n      const newTaskObj = {\n        id: new Date().getTime(),\n        title: newTask,\n        description: newTaskDescription,\n        completed: false\n      };\n      setTasks([...tasks, newTaskObj]);\n      setNewTask('');\n      setNewTaskDescription('');\n    }\n  };\n  const deleteTask = taskId => {\n    const updatedTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(updatedTasks);\n  };\n  const toggleComplete = taskId => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n  const filteredTasks = tasks.filter(task => task.title.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search tasks\",\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => toggleComplete(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: task.completed ? 'completed' : '',\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Task title\",\n      value: newTask,\n      onChange: event => setNewTask(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Task description\",\n      value: newTaskDescription,\n      onChange: event => setNewTaskDescription(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"XrBk5uW6vWUzlo2h/sELT2CvH1c=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TodoList","_s","tasks","setTasks","newTask","setNewTask","newTaskDescription","setNewTaskDescription","searchTerm","setSearchTerm","storedTasks","localStorage","getItem","JSON","parse","setItem","stringify","addTask","trim","newTaskObj","id","Date","getTime","title","description","completed","deleteTask","taskId","updatedTasks","filter","task","toggleComplete","map","handleSearch","event","target","value","filteredTasks","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","checked","className","onClick","_c","$RefreshReg$"],"sources":["/Users/mohamedkaif/Desktop/myPortfolio-kaif/src/pages/Homepage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst TodoList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [newTaskDescription, setNewTaskDescription] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    const storedTasks = localStorage.getItem('tasks');\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  const addTask = () => {\n    if (newTask.trim() !== '') {\n      const newTaskObj = {\n        id: new Date().getTime(),\n        title: newTask,\n        description: newTaskDescription,\n        completed: false,\n      };\n      setTasks([...tasks, newTaskObj]);\n      setNewTask('');\n      setNewTaskDescription('');\n    }\n  };\n\n  const deleteTask = (taskId) => {\n    const updatedTasks = tasks.filter((task) => task.id !== taskId);\n    setTasks(updatedTasks);\n  };\n\n  const toggleComplete = (taskId) => {\n    const updatedTasks = tasks.map((task) => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          completed: !task.completed,\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  const handleSearch = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const filteredTasks = tasks.filter((task) =>\n    task.title.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div>\n      <h1>To-Do List</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search tasks\"\n        value={searchTerm}\n        onChange={handleSearch}\n      />\n      <ul>\n        {filteredTasks.map((task) => (\n          <li key={task.id}>\n            <input\n              type=\"checkbox\"\n              checked={task.completed}\n              onChange={() => toggleComplete(task.id)}\n            />\n            <span className={task.completed ? 'completed' : ''}>\n              {task.title}\n            </span>\n            <button onClick={() => deleteTask(task.id)}>Delete</button>\n            <button>Edit</button>\n            <p>{task.description}</p>\n          </li>\n        ))}\n      </ul>\n      <h2>Add New Task</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Task title\"\n        value={newTask}\n        onChange={(event) => setNewTask(event.target.value)}\n      />\n      <textarea\n        placeholder=\"Task description\"\n        value={newTaskDescription}\n        onChange={(event) => setNewTaskDescription(event.target.value)}\n      ></textarea>\n      <button onClick={addTask}>Add Task</button>\n    </div>\n  );\n};\n\nexport default TodoList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}