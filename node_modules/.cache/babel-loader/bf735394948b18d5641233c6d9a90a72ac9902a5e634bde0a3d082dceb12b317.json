{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedkaif/Downloads/project_1/src/components/Adduser.js\",\n  _s = $RefreshSig$();\nimport Card from \"../UI/Card\";\nimport classes from \"./Adduser.module.css\";\nimport { useState } from \"react\";\nimport Button from \"../UI/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Adduser = props => {\n  _s();\n  const [enteredUsername, setUsername] = useState('');\n  const [enteredAge, setUserage] = useState('');\n  const Addhandler = event => {\n    event.preventDefault(); //To ensure the page is not reloading after touching the button\n    if (enteredUsername.trim().length === 0 && enteredAge.trim().length === 0) {\n      return;\n    }\n    if (+enteredAge.length > 0) {\n      return;\n    }\n    props.Onadduser(enteredUsername, enteredAge);\n    setUserage(''); //once the form is submitted the form will resetted (only if we add the value prop in the input)\n    setUsername('');\n  };\n  const usernamehandler = event => {\n    setUsername(event.target.value); //this the way that the user entered will be seen on the screen  \n  };\n\n  const useragehandler = event => {\n    setUserage(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.input,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: Addhandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"Username\",\n        type: \"text\",\n        value: enteredUsername,\n        onChange: usernamehandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Age\",\n        children: \"Age(years)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"Age\",\n        type: \"number\",\n        value: enteredAge,\n        onChange: useragehandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Adduser, \"oh8tzmHXB1HjzE5SRqOZT/aAkWE=\");\n_c = Adduser;\nexport default Adduser;\nvar _c;\n$RefreshReg$(_c, \"Adduser\");","map":{"version":3,"names":["Card","classes","useState","Button","jsxDEV","_jsxDEV","Adduser","props","_s","enteredUsername","setUsername","enteredAge","setUserage","Addhandler","event","preventDefault","trim","length","Onadduser","usernamehandler","target","value","useragehandler","className","input","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","_c","$RefreshReg$"],"sources":["/Users/mohamedkaif/Downloads/project_1/src/components/Adduser.js"],"sourcesContent":["import Card from \"../UI/Card\";\nimport classes from \"./Adduser.module.css\"\nimport { useState } from \"react\";\nimport Button from \"../UI/Button\";\nconst Adduser=(props)=>{\n const[enteredUsername,setUsername]=useState('')\n const[enteredAge,setUserage]=useState('')\n    const Addhandler=(event)=>{\n        event.preventDefault();//To ensure the page is not reloading after touching the button\n        if(enteredUsername.trim().length===0 && enteredAge.trim().length===0){\n            return;\n        }\n        if(+enteredAge.length>0){\n            return;\n        }\n        props.Onadduser(enteredUsername,enteredAge)\n        setUserage('')//once the form is submitted the form will resetted (only if we add the value prop in the input)\n        setUsername('')\n    }\n    const usernamehandler=(event)=>{\n            setUsername(event.target.value)//this the way that the user entered will be seen on the screen  \n    }\n    const useragehandler=(event)=>{\n        setUserage(event.target.value)\n}\n    return(\n        <Card className={classes.input}>\n        <form onSubmit={Addhandler}>\n            <label htmlFor=\"Username\" >Username</label>\n            <input id=\"Username\" type=\"text\" value={enteredUsername} onChange={usernamehandler}></input>\n            <label htmlFor=\"Age\" >Age(years)</label>\n            <input  id=\"Age\" type=\"number\" value={enteredAge} onChange={useragehandler}></input>\n            <Button>Submit</Button>\n            \n        </form>\n        </Card>\n        )\n}\nexport default Adduser\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClC,MAAMC,OAAO,GAAEC,KAAK,IAAG;EAAAC,EAAA;EACtB,MAAK,CAACC,eAAe,EAACC,WAAW,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAK,CAACS,UAAU,EAACC,UAAU,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,UAAU,GAAEC,KAAK,IAAG;IACtBA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC;IACvB,IAAGN,eAAe,CAACO,IAAI,CAAC,CAAC,CAACC,MAAM,KAAG,CAAC,IAAIN,UAAU,CAACK,IAAI,CAAC,CAAC,CAACC,MAAM,KAAG,CAAC,EAAC;MACjE;IACJ;IACA,IAAG,CAACN,UAAU,CAACM,MAAM,GAAC,CAAC,EAAC;MACpB;IACJ;IACAV,KAAK,CAACW,SAAS,CAACT,eAAe,EAACE,UAAU,CAAC;IAC3CC,UAAU,CAAC,EAAE,CAAC;IACdF,WAAW,CAAC,EAAE,CAAC;EACnB,CAAC;EACD,MAAMS,eAAe,GAAEL,KAAK,IAAG;IACvBJ,WAAW,CAACI,KAAK,CAACM,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;;EACD,MAAMC,cAAc,GAAER,KAAK,IAAG;IAC1BF,UAAU,CAACE,KAAK,CAACM,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EACG,oBACIhB,OAAA,CAACL,IAAI;IAACuB,SAAS,EAAEtB,OAAO,CAACuB,KAAM;IAAAC,QAAA,eAC/BpB,OAAA;MAAMqB,QAAQ,EAAEb,UAAW;MAAAY,QAAA,gBACvBpB,OAAA;QAAOsB,OAAO,EAAC,UAAU;QAAAF,QAAA,EAAE;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3C1B,OAAA;QAAO2B,EAAE,EAAC,UAAU;QAACC,IAAI,EAAC,MAAM;QAACZ,KAAK,EAAEZ,eAAgB;QAACyB,QAAQ,EAAEf;MAAgB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5F1B,OAAA;QAAOsB,OAAO,EAAC,KAAK;QAAAF,QAAA,EAAE;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxC1B,OAAA;QAAQ2B,EAAE,EAAC,KAAK;QAACC,IAAI,EAAC,QAAQ;QAACZ,KAAK,EAAEV,UAAW;QAACuB,QAAQ,EAAEZ;MAAe;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpF1B,OAAA,CAACF,MAAM;QAAAsB,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAErB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEf,CAAC;AAAAvB,EAAA,CAjCKF,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAkCb,eAAeA,OAAO;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}